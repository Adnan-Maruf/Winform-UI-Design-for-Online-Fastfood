<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAGBgAAAEAIACICQAAFgAAACgAAAAYAAAAMAAAAAEAIAAAAAAAAAkAAAEBAAABAQAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AB0xOxogMEAgIDBAICAw
        QCAgMEAgIDBAICAwQCAgMEAgIDBAICAwQCAgMEAgIDBAICAwQCAgMEAgIDBAICAwQCAgMEAgIDBAICAw
        QCAdMTsa////AP///wAhLkEnHy0/uyAtP/ogLT/3IC0/9yAtP/cgLT/3IC0/9yAtP/cgLT/3IC0/9yAt
        P/cgLT/3IC0/9yAtP/cgLT/3IC0/9yAtP/cgLT/3IC0/9yAtP/cgLT/6IS0+vCEuQScgLUCgIS0/jUjN
        9FxL1P3tS9T9+EvU/fhL1P34S9T9+EvU/fhL1P34S9T9+EvU/fhL1P34S9T9+EvU/fhL1P34S9T9+EvU
        /fhL1P34S9T9+EvU/fhK0vrxKlZtuyAtQKAgLT/pIi0+LUvV/rpL1P3/S9T9/0vU/f9L1P3/S9T9/0vU
        /f9L1P3/S9T9/0vU/f9L1P3/S9T9/0vU/f9L1P3/S9T9/0vU/f9L1P3/S9T9/0vU/f9L1P3/QrHW2SAt
        P+kgLT+lIC0/5CI0RrokP1PFJUBUxiVAVMYlQFTGJUBUxiVAVMYlQFTGJUBUxiVAVMYlQFTGJUBUxiVA
        VMYlQFTGJUBUxiVAVMYlQFTGJUBUxiVAVMYkPlLIIS9B5yAtP6UAAAACIC0/zSEuQ7svQ4jDL0OIwy9D
        iMMvQ4jDL0OIwy9DiMMvQ4jDL0OIwy9DiMMvQ4jDL0OIwy9DiMMvQ4jDL0OIwy9DiMMvQ4jDL0OIwy9D
        iMMjMU7LIC0/zQAAAAL///8AIC0/7CIrPzVAWs+UPlnOwD5ZzsA+Wc7APlnOwD5ZzsA+Wc7APlnOwD5Z
        zsA+Wc7APlnOwD5ZzsA+Wc7APlnOwD5ZzsA+Wc7APlnOwD5ZzsA2TKO1IC0/7P///wD///8AIC4/kSAt
        P94gLUCgIC1AoCAtQKAgLUCgIC1AoCAtQKAgLUCgIC1AoCAtQKAgLUCgIC1AoCAtQKAgLUCgIC1AoCAt
        QKAgLUCgIC1AoCAtQKAgLT/eIC4/kf///wD///8AIC5AOCAtP/8gL0LlI019vyRQgcAjS3e/IC5A7iAt
        P/8gLT//ITpXxyRQgcAkUIHAITpXxyAtP/8gLT//IC5A7iNLd78kUIHAI019vyAvQuUgLT//IC5AOP//
        /wD///8AHy0+kyAtP7EgLj/UIC5B6SE6WcYgLkDwJjVC1FVvX744Sk3AIC4/9SEzTNAhM0zQIC4/9TlM
        TsJXcWDCJjVD1CAuQPAhOlnGIC5B6SQyQdsuPkfJHy0+k////wD///8AIS5AZCEtP8xIXVdSS2RZtzlM
        TsVYc2HGg6l76oOpe+qDqXvqcJNw1kBVUsRAVVLEcJNw1oOpe+qDqXvqg6l76lhzYcY5TE7FUWlcxHaZ
        c9omNEPWIS5AZP///wAkJDcOIC0+sCAtP/4gLT/4IC0/+CAtP/ggLT/4IC0/+CAtP/ggLT/4IC0/+CAt
        P/ggLT/4IC0/+CAtP/ggLT/4IC0/+CAtP/ggLT/4IC0/+CAtP/ggLT/+IC0+sCQkNw4gLT+eIC0/sUS5
        4LtL1f3wS9X98EvV/fBL1f3wS9X98EvV/fBL1f3wS9X98EvV/fBL1f3wS9X98EvV/fBL1f3wS9X98EvV
        /fBL1f3wS9X98EvV/fBFu+LTJD9SxiAtP54gLT/oIis/NUzV/YpL1P3/S9T9/0vU/f9L1P3/S9T9/0vU
        /f9L1P3/S9T9/0vU/f9L1P3/S9T9/0vU/f9L1P3/S9T9/0vU/f9L1P3/S9T9/0vU/f9L1P3/QKrN0yAt
        P+ggLj++Hy0+Wk3U/zVL1P3/S9T9/yxcdMBAqMvTS9T9/0vU/f9L1P3/S9T9/zWCoMQ1gqDES9T9/0vU
        /f9L1P3/S9T9/0Coy9MsXHTAS9T9/0vU/f9L1P3/OY2t1yAuP74fLT5rIC0+sP///wBK1f1/S9T9/0jL
        8vNL0/z+S9T9/0vU/f9L1P3/S9T9/0rQ+PhK0Pj4S9T9/0vU/f9L1P3/S9T9/0vT/P5Iy/LzS9T9/0vU
        /f9L1P3/J0dd0B8tPmsgK0AYIC0/6h8sPmP///8AStX8YEvU/ftL1P3/S9T9/0rQ+flIzPT0S9T9/0vU
        /f9L1P3/S9T9/0jM9PRK0Pn5S9T9/0vU/f9L1P3/S9T9/0vU/f81gqDKIC0/6iArQBj///8AHi9BKx8t
        P+MfLT+C////AErX/yZK1P2NS9T97TmRscgxcIvAS9T9/0vU/f9L1P3/S9T9/zFwi8A5kbHIS9T9/0vU
        /f9L1P33StT9oShKYZ4fLT/jHi9BK////wD///8A////ACIrPB4gLT/XICw/ySAtQGAcOTkJQN//CEzV
        /FtL1P2TS9T+sUvU/c9L1P3uS9T980vU/dVL1P63S9T9mUfG7XAkPlFrICw/ySAtP9ciKzwe////AP//
        /wD///8A////AP///wAaMzMKHyw+Yx8tP8sgLT/vIS1AlCAtP2EeLkFDIjA+JSAgQAggIEAIIjA+JR4u
        QUMgLT9hIS1AlCAtP+8fLT/LHyw+YxozMwr///8A////AP///wD///8A////AP///wD///8A////AP//
        /wAeLUEzICxAkCAtP7YgLT/UIC0/8iAtP/4gLT/+IC0/8iAtP9QgLT+2ICxAkB4tQTP///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////ACAw
        QBAgMEAQ////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8AwAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAABAIAA
        AQCAAAEAgAABAIAAAQAAAAAAAAAAAAAAAAAAAAAAIAAAABAAAACIAAEAwAADAOAABwD8AD8A/+f/AP//
        /wA=
</value>
  </data>
</root>